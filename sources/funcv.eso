C FUNCV     SOURCE    BP208322  20/10/05    21:15:07     10742          

        SUBROUTINE funcv(NT,NHBM,NDDL,NFFT,KTQ,KTKAM,KTPHI,KTLIAA,
     &             KTLIAB,KTPAS,KTFEX,KOCLFA,KOCLB1,JANA2,fvec,fref,NNM)
*
*=======================================================================  
*       Calcul du residu R(X) = ZX-Fnl-Fext -> fvec 
*       et de la Jacobienne dFnl/dX         -> JAC(*,*) du segment KTQ
*=======================================================================

*----- Declarations ----------------------------------------------------

      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)
      
      INTEGER NDDL,NFFT,NT,NHBM
      SEGMENT mwork
      REAL*8 ZX(NT),VCTCS(7),LAMBD(NDDL),AiDi(2),Di(2),bi(2)
      ENDSEGMENT
      REAL*8 FNLP(NT),FNL(NT),fvec(NT),PP(NT)
      REAL*8 EPS, summ, Q1SAVE 
c     NNM: cas des modes non-lineaires  
      LOGICAL JANA2,NNM        
      REAL*8 fref
*       
*-INC TMDYNC.INC
************************** debut TMDYNC.INC ****************************

*    TMDYNC : FUTUR INCLUDE POUR LES SEGMENTS DE L'OPERATEUR DYNC
*    TODO   : a extraire dans un include des que stabilise
*
*     Segment des variables generalisees:
*     -----------------------------------
      SEGMENT MTQ
         REAL*8 Q1(NT1)
         REAL*8 OMEG,XPARA
         REAL*8 JAC(NT1,NT1),ZZ(NT1,NT1),RX(NT1,NT1)
         REAL*8 dX(NT1), dw, dv
      ENDSEGMENT
*     Q1   : vecteur des inconnues frequentielles de dimension (2h+1)*n
*            Q1 = {q_0 q_c1 q_s1 ... q_sh}
*            avec q_i vecteur de dimension n ou n=nombre de modes
*     OMEG : frequence fondamentale de l'approximation
*     XPARA: parametre de continuation (par defaut la frequence) 
*            \in [PARINI,PARFIN]
*     RX   : matrice jacobienne = ZZ + dFnl/dX
*     JAC  : jacobienne des efforts non-lineaires  = dFnl/dX
*     ZZ   : matrice dynamique associee aux matrices modales K, M et C 
*            lineaires et constantes
*     {dX,dw,(dv)} : vecteur tangent utilise pour la prediction
*
*
*     Segment contenant les matrices XK, XASM et XM:
*     ---------------------------------------------
      SEGMENT MTKAM
         REAL*8 XK(NA1,NB1K),XASM(NA1,NB1C),XM(NA1,NB1M)
         REAL*8 GAM(NPC1,nl1),IGAM(nl1,NPC1),DL(nl1)
*         REAL*8 GAMFIN(NPC2,nl1)
      ENDSEGMENT
*     XK,XASM et XM : matrices de raideur, amortissement et masse
*     GAM et IGAM : matrices pour la FFT et son inverse
*     GAMFIN      : 
*
*     Segment des deformees modales:
*     ------------------------------
*     (idem DYNE)
      SEGMENT MTPHI
         INTEGER IBASB(NPLB),IPLSB(NPLB),INMSB(NSB),IORSB(NSB)
         INTEGER IAROTA(NSB)
         REAL*8  XPHILB(NSB,NPLSB,NA2,IDIMB)
      ENDSEGMENT
*
*     Segment descriptif des liaisons en base A:
*     ------------------------------------------
*     (idem DYNE)
      SEGMENT MTLIAA
         INTEGER IPALA(NLIAA,NIPALA),IPLIA(NLIAA,NPLAA),JPLIA(NPLA)
         REAL*8  XPALA(NLIAA,NXPALA)
      ENDSEGMENT
*
*     Segment descriptif des liaisons en base B:
*     ------------------------------------------
*     (idem DYNE)
      SEGMENT MTLIAB
         INTEGER IPALB(NLIAB,NIPALB),IPLIB(NLIAB,NPLBB),JPLIB(NPLB)
         REAL*8  XPALB(NLIAB,NXPALB)
         REAL*8  XABSCI(NLIAB,NIP),XORDON(NLIAB,NIP)
      ENDSEGMENT
*
*     Segment representant les chargements exterieurs:
*     -----------------------------------------------
      SEGMENT MTFEX
         REAL*8  FEXA(NT1)
         REAL*8  FEXPSM(NPLB,NPC1,2,IDIMB)
         INTEGER BAL
      ENDSEGMENT
*     FEXA : Vecteur des efforts ext. sous la forme de coefficients de
*            Fourier et exprimes en base A
*     FEXPSM: chargement/deplacement statique lie aux modes negliges
*             (neglige aussi les Fnl). Dans DYNC toujours =0, cree pour
*             compatibilite avec calcul des Fnl.
*     BAL  : indique s'il s'agit d'un chargement de type balourd
*            (cad proportionnel a OMEG**2)
*
*     Segment "local" pour DEVLFA:
*     ----------------------------
      SEGMENT LOCLFA
         REAL*8 FTEST(NA1,4)
      ENDSEGMENT
*      
*     Segment "local" pour DEVLB1:
*     ----------------------------
      SEGMENT LOCLB1
         REAL*8 FTEST2(NPLB,6)
      ENDSEGMENT
*      
*     Segment contenant les variables au cours d un pas de temps:
*     ----------------------------------------------------------
      SEGMENT MTPAS
         REAL*8 FTOTA(NA1,4),FTOTB(NPLB,IDIMB),FTOTBA(NA1)
         REAL*8 XPTB(NPLB,2,IDIMB),FINERT(NA1,4)
         REAL*8 XVALA(NLIAA,4,NTVAR),XVALB(NLIAB,4,NTVAR)
         REAL*8 FEXB(NPLB,3,IDIM),XCHPFB(2,NLIAB,4,NPLB)
         REAL*8 KTOTXA(NA1,NA1),KTOTVA(NA1,NA1)
         REAL*8 KTOTXB(NPLB,IDIMB,IDIMB), KTOTVB(NPLB,IDIMB,IDIMB) 
      ENDSEGMENT
*     FTOTA/B/BA : forces sur base A, B et B projetees sur A
*     XPTB       : deplacement du point d'une liaison en base B
*     XVALA/B    : grandeurs de la liaison en base A/B a stocker
*     FEXB       : forces exterieures en base B (a priori uniquement 
*                  pour les moments appliques aux rotations rigides ?)
*     XCHPFB     : forces de contact en base B (lorsqu'on  considere un
*                  maillage de contact dans certaines liaisons)
*     KTOTXA/XB/VA/VB : Jacobienne par rapport au deplacement/vitesse en
*                       base A/B (= contributions a dFnl/dX)
*
*
*     Segment des points de reference des modes (base A):
*     --------------------------------------------------
      SEGMENT MPREF
         INTEGER IPOREF(NPREF)
      ENDSEGMENT
*
*     Segment des points en base B:
*     -----------------------------
      SEGMENT NCPR(XCOOR(/1)/(IDIM+1))
*     NCRP(#global) = #local dans XPTB (1er indice)      
*
*     Segment des parametres numeriques pour la continuation: 
*     ------------------------------------------------------
      SEGMENT PARNUM
         CHARACTER*4 TYPS
         REAL*8   DS,DSMAX,DSMIN,ANGMIN,ANGMAX,ITERMOY,ISENS,TOLMIN
         REAL*8   PARINI,PARFIN
         INTEGER  ITERMAX,NBPAS
         LOGICAL  JANAL
      ENDSEGMENT
*
*     Segment des resultats:
*     ---------------------
      SEGMENT  PSORT
        REAL*8 QSAVE(NT1,NPAS),WSAVE(NPAS),LSAVE(2,2*NA1,NPAS)
        REAL*8 VSAVE(NPAS)
        LOGICAL ZSAVE(NPAS)
        CHARACTER*2 TYPBIF(NBIFU)
        REAL*8 QBIFU(NT1,NBIFU),WBIFU(NBIFU),WBIF2(NBIFU)
        REAL*8 QPSIR(NT1,NBIFU),QPSII(NT1,NBIFU)
        INTEGER CBIF
      ENDSEGMENT
*     QSAVE(i,j) = Q harmonique i au pas j
*     VSAVE(j)   = parametre de continuation (si non w) au j-eme pas
*     ZSAVE(j)   = stabilite au j-eme pas
*     LSAVE(1,j) : partie reelle de l'exposant de Floquet
*     LSAVE(2,j) : partie imaginaire de l'exposant de Floquet
*     TYPBIF = {LimitPoint, BranchPoint, NeimarkSacker, PeriodDoubling}
*     QBIFU,WBIFU : vecteur Q et w au point de bifurcation
*           WBIF2 : partie imaginaire de l'exposant de Floquet
*     QPSIR,QPSII : vecteur propre au point de bifurcation
      
*     Segment des tableaux de travail:
*     -------------------------------
      SEGMENT  MTEMP
         REAL*8 RW(NT1),A,T0(NT1+1),TP(NT1+1),AMPX,AUX
         REAL*8 T02(NT1+2), TP2(NT1+2)
         INTEGER IPIV(NT1),IPIV2(NT1+1),IPIV3(NT1+2)
         REAL*8 res
         REAL*8 RHS(NT1+1),Ja(NT1+1,NT1+1)
         REAL*8 QOLD(NT1),OMEGOLD
         REAL*8 MATJA(NT1+1,NT1+1),Rw2(NT1)
         REAL*8 Jaa(NT1+2,NT1+2),RHS2(NT1+2),Ra(NT1),VV,VVOLD
      ENDSEGMENT
*     Jacobiennes augmentees 
*     Ja : [ RX  Rw ; dX dw]
*     Jaa: [ RX  Rw Ra; gx 0 0; dX dw da]

*      SEGMENT  NNNN
*         REAL*8 IGAM2(nl1,NPC2),DL2(nl1)
*      ENDSEGMENT

*************************** fin TMDYNC.INC *****************************
       
-INC CCREEL
-INC SMLREEL

*----- Recup + Init ----------------------------------------------------
        segini,mwork
*       Variables generalisees: coefficients de Fourier et frequence
        MTQ=KTQ
*       Matrices XK,KASM,XM,GAM,IGAM,DL      
        MTKAM=KTKAM        
*       Deformees modales
        MTPHI = KTPHI   
*       Liaisons sur base A
        MTLIAA = KTLIAA
*       Liaisons sur base B
        MTLIAB = KTLIAB
*       Forces externes
        MTFEX=KTFEX    
*       Truc local base A
        LOCLFA = KOCLFA
*       Truc local base B
        LOCLB1 = KOCLB1         
*       Inconnues sur un pas de temps (AFT)         
        MTPAS=KTPAS  
        
*------ Calcul du produit Z*X ------------------------------------------
        CALL HBMZX(NT,NDDL,1,Q1,OMEG,XM,XASM,XK,ZX,.not.NNM)
       
****** Cas Modes non-lineaires ****************************************
       IF (NNM) THEN
c         forces ext = 0
          DO I= 1,NT
            PP(I) = 0.D0
          ENDDO        
          
****** Cas Reponse Forcee et Autonome *********************************
       ELSE        

c         CALL HBMZX(NT,NDDL,1,Q1,OMEG,XM,XASM,XK,ZX)
*       Si presence de forces de couplage, on enrichit Z*X 
        DO J = 1,IPALA(/1)
          IF (IPALA(J,1).EQ.5 .AND. IPALA(J,3).EQ.101) THEN
           DO IJ = 1,7
             VCTCS(IJ) = XPALA(J,IJ)
           ENDDO
           JG = NDDL
           MLREE1 = IPALA(J,7)
c            SEGACT, MLREE1
           DO IJ = 1,JG
             LAMBD(IJ) = MLREE1.PROG(IJ)
           ENDDO
           MLREE2 = IPALA(J,4)
           MLREE3 = IPALA(J,8)
c            SEGACT, MLREE2,MLREE3
c *          Nombre de termes fixe, à generaliser si besoin.            
c               JG = 2
*          tentative de generalisation
           JG = MLREE2.PROG(/1)
           DO IJ = 1,JG
             AiDi(IJ) = MLREE2.PROG(IJ)
             Di(IJ) = MLREE3.PROG(IJ)
           ENDDO
c            SEGDES,MLREE1,MLREE2,MLREE3     
             CALL HBMZFX(NT,NDDL,OMEG,Q1,AiDi,Di,LAMBD,VCTCS,ZX)
          ENDIF
        ENDDO    
*        DO I = 1, NT
*          WRITE(*,*) 'ZZ(',I,',:)=',(ZZ(I,IOU),IOU=1,NT)
*        ENDDO
*       P: donnee dans MTFEX --> FEXA 
*       Si excitation de type balourd, on met P à jour: P = w²FEXA
        DO I=1,NT
          IF (BAL.EQ.1) THEN
            PP(I) = FEXA(I)*(OMEG**2)
          ELSE
            PP(I) = FEXA(I)
          END IF
        ENDDO
        
       ENDIF
****** Fin distinction Modes non-lineaires / autres cas  ***************
        
        
*------ Calcul de FNL(X) et dFNLdX (AFT) -------------------------------

*  --- Calcul analytique ---
       IF (JANA2) THEN
*       FNL(X) et JAC du segment MTQ 
        CALL HBMFN2(NT,NHBM,NDDL,NFFT,MTQ,MTKAM,MTPHI,MTLIAA,
     &                    MTLIAB,MTPAS,MTFEX,LOCLFA,LOCLB1,FNL)
     
*  --- Calcul par difference finies ---
       ELSE
*       FNL(X)  
        CALL HBMFNL(NT,NHBM,NDDL,NFFT,MTQ,MTKAM,MTPHI,MTLIAA,
     &                   MTLIAB,MTPAS,MTFEX,LOCLFA,LOCLB1,FNL)
*       dFNLFdX (Differences finies)
c       Magnitude de la perturbation
        summ = dnrm2(NT,Q1,1)
        IF (summ.NE.0.) THEN
ctest       EPS = summ*((XZPREC)**0.3)
            EPS = 1.D-6 * summ
        ELSE 
            EPS = (XZPREC)**0.3
        ENDIF
c         if(OMEG.gt.0.153.and.OMEG.lt.0.170) write(*,*)'>>> EPS=',EPS
c       EPS = max(XZPREC,summ*1.E-6)
c       Boucle sur les inconnues
        DO J = 1,NT
c          Perturbation des coefficients de Fourier
           Q1SAVE=Q1(J)
c          forward differentation -> JAC+
           Q1(J) =Q1SAVE+EPS
           CALL HBMFNL(NT,NHBM,NDDL,NFFT,MTQ,MTKAM,MTPHI,MTLIAA,
     &                      MTLIAB,MTPAS,MTFEX,LOCLFA,LOCLB1,FNLP)
cdebug
c             if(OMEG.gt.0.153.and.OMEG.lt.0.170) 
c      &      write(*,123) J,(FNLP(iou),iou=1,NT)
           Q1(J) =Q1SAVE
           DO K=1,NT
              JAC(K,J) =  FNLP(K)
           ENDDO
c          backward differentation -> JAC+
           Q1(J) =Q1SAVE-EPS
           CALL HBMFNL(NT,NHBM,NDDL,NFFT,MTQ,MTKAM,MTPHI,MTLIAA,
     &                      MTLIAB,MTPAS,MTFEX,LOCLFA,LOCLB1,FNLP)
           Q1(J) =Q1SAVE
c          central differentation -> JAC = (JAC+ + JAC-) / 2
           DO K=1,NT
              JAC(K,J) =  (JAC(K,J) - FNLP(K))/(2.*EPS)
           ENDDO
        ENDDO  
       ENDIF
       
       
*------ Residu d'equilibre : R(X) = ZX-Fnl-Fext ------------------------

        DO N=1,NT 
           fvec(N) = ZX(N)-FNL(N)-PP(N)
        ENDDO 
*       reference (maxi entre la norme 2 des 3 termes du residu)
        fref = MAX(MAX(dnrm2(NT,ZX,1),dnrm2(NT,FNL,1)),dnrm2(NT,PP,1))
c         fref = dnrm2(NT,ZX,1) + dnrm2(NT,FNL,1) + dnrm2(NT,PP,1)
        
*       Menage        
        segsup,mwork
cdebug
c  123    FORMAT('Fnl(Q+eps*e_',I2,')=',9(E10.3E1,1X))
        
        RETURN
        END
 
 
 
