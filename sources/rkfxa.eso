      SUBROUTINE RKFXA(FEXA,FTOTA,NPFEXA,NA1,NPC1,NPAS,
     &                  FTEXB,FEXB,NPLB,IDIMB,RIGIDE)
      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)
*--------------------------------------------------------------------*
*                                                                    *
*     Op{rateur DYNE : algorithme de Fu - de Vogelaere               *
*     ________________________________________________               *
*                                                                    *
*     Ajout des termes de forces ext{rieures libres.                 *
*                                                                    *
*     Param}tres:                                                    *
*                                                                    *
* e   FEXA    Evolution des forces ext�rieures, en base A            *
* e   IFEXA   Num�ro du mode correspondant au point de chargement    *
*             (supprime le 2018-12-14 par bp)
* es  FTOTA   Forces ext�rieures libres totalis�es, en base A        *
* e   NPFEXA  Nombre de points de chargement                         *
* e   NA1     Nombre total d'inconnues dans la base A                *
* e   NPC1    Nombre de pas de calcul                                *
* e   NPAS    Num{ro du pas courant                                  *
* e   FTEXB   Evolution des forces ext�rieures sur base B, pour le   *
*             calcul des  moments                                    *
* es  FEXB    Forces ext�rieures sur base B, pour le calcul des      *
*             moments                                                *                                               *
*                                                                    *
*     Auteur, date de cr�ation:                                      *
*                                                                    *
*     Denis ROBERT-MOUGIN, le 22 mai 1989.                           *
*                                                                    *
*--------------------------------------------------------------------*
      REAL*8 FEXA(NPFEXA,NPC1,*),FTOTA(NA1,*)
      REAL*8 FEXB(NPLB,3,*),FTEXB(NPLB,NPC1,2,*)
c       INTEGER IFEXA(*)
*
      LOGICAL RIGIDE
*     remarque : l'indice 3 :
*       - de ftota n'est pas utilise dans cet algorithme
*       - de fexb a ete rajoute pour l'occasion
*
*     Boucle sur les points de chargement:
*
      DO 100 I=1,NPFEXA
*        au pas de temps n+1 :
         FTOTA(I,1) = FEXA(I,NPAS,1)
*        au demi pas de temps :
         FTOTA(I,3) = FEXA(I,NPAS,2) + 
     &               (FEXA(I,NPAS,1) - FEXA(I,NPAS,2))/2.d0
 100     CONTINUE
*     END DO
*
* Dans le cas des corps rigides, boucle sur les chargements Base B
      IF (RIGIDE) THEN
         IF (IDIMB.EQ.6) THEN
             IDIM = 3
         ELSE
             IDIM = 2
         ENDIF
         DO 200 IP=1,NPLB
             DO 210 ID=1,IDIM
*        au pas de temps n+1 :
                FEXB(IP,1,ID) = FTEXB(IP,NPAS,1,ID)
*        au demi pas de temps :
                FEXB(IP,3,ID) = FTEXB(IP,NPAS,2,ID) + 
     &               (fexb(I,NPAS,1,id) - fexb(I,NPAS,2,id))/2.d0
 210         CONTINUE
 200     CONTINUE
      ENDIF
      RETURN
      END



 
