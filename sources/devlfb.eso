C DEVLFB    SOURCE    BP208322  20/09/18    21:15:39     10718          
      SUBROUTINE DEVLFB(Q1,Q2,FTOTA,NA1,IPALB,IPLIB,XPALB,XVALB,NLIAB,
     &                  XPHILB,JPLIB,NPLB,IDIMB,FTOTB,FTOTBA,XPTB,PDT,T,
     &                  NPAS,IBASB,IPLSB,INMSB,IORSB,NSB,NPLSB,NA2,
     &                  IND,FEXPSM,NPC1,IERRD,FTEST2,
     &                  XABSCI,XORDON,NIP,FEXB,RIGIDE,IAROTA,XCHPFB)
      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)
*--------------------------------------------------------------------*
*                                                                    *
*     Op�rateur DYNE : algorithme de Fu - de Vogelaere               *
*     ________________________________________________               *
*                                                                    *
*     Calcul des forces de choc base B.                              *
*                                                                    *
*     Param�tres:                                                    *
*                                                                    *
* e   Q1(.,.) Vecteur des d�placements g�n�ralis�s.                  *
* e   Q2(.,.) Vecteur des vitesses generalisees.                     *
* es  FTOTA   Forces ext�rieures totalis�es sur la base A.           *
* e   NA1     Nombre total d'inconnues en base A.                    *
* e   IPALB   Renseigne sur le type de la liaison.                   *
* e   IPLIB   Tableau contenant les num�ros "DYNE" de la liaison.    *
* e   XPALB   Tableau contenant les param�tres de la liaison.        *
* es  XVALB   Tableau contenant les variables internes des liaisons  *
* e   NLIAB   Nombre de liaisons sur la base B.                      *
* e   XPHILB  Tableau des vecteurs propres aux points de liaisons.   *
* e   JPLIB   Tableau contenant les num�ros "GIBI" des liaisons.     *
* e   NPLB    Nombre total de points intervenant dans les liaisons.  *
* e   IDIMB   Nombre de directions.                                  *
* e   IND     Indice du pas.                                         *
* e   XABSCI  Tableau contenant les abscisses de la loi plastique    *
*             pour la liaison point-point- ... -plastique            *
* e   XORDON  Tableau contenant les ordonnees de la loi plastique    *
*             pour la liaison point-point- ... -plastique            *
* e   NIP     Nb de pts dans l'evolution de la loi de comportement   *
* e   RIGIDE  Vrai si corps rigide, faux sinon                       *
*                                                                    *
*                                                                    *
*     Auteur, date de cr�ation:                                      *
*                                                                    *
*     Lionel VIVAN, le 20 aout 1989.                                 *
*                                                                    *
*--------------------------------------------------------------------*
*
      INTEGER IPALB(NLIAB,*),IPLIB(NLIAB,*),JPLIB(*)
      INTEGER IBASB(*),IPLSB(*),INMSB(*),IORSB(*),IAROTA(*)
      REAL*8  XPALB(NLIAB,*),Q1(NA1,*),Q2(NA1,*),FTOTA(NA1,*)
      REAL*8  XVALB(NLIAB,4,*),XPHILB(NSB,NPLSB,NA2,*),XPTB(NPLB,2,*)
      REAL*8  FTOTB(NPLB,*),FTOTBA(*),FEXPSM(NPLB,NPC1,2,*)
      REAL*8  XABSCI(NLIAB,*),XORDON(NLIAB,*),FEXB(NPLB,3,*)
      REAL*8  XCHPFB(2,NLIAB,4,NPLB)
      REAL*8  FTEST2(NPLB,6)
*
      LOGICAL RIGIDE
*
**** Matt: de vogelaere n assure plus les rotas rigides:
      RIGIDE = .FALSE.
      KTROT = 0
****
      DO 20 ID = 1,IDIMB
      DO 21 IP = 1,NPLB
            FTOTB(IP,ID) = 0.D0
 21   CONTINUE
 20   CONTINUE
*
*     Recombinaison des d�placements aux points de choc
*
      IF (IDIMB.EQ.6) THEN
         IDIM = 3
      ELSE
         IDIM = 2
      ENDIF
*old      CALL DEVRCO(Q1,NA1,XPTB,NPLB,XPHILB,NSB,NPLSB,NA2,IDIMB,IBASB,
      IF (IIMPI.EQ.333) WRITE(IOIMP,*)'DEVLFB: appel DEVRCO'
      CALL DEVRCO(Q1,Q2,NA1,XPTB,NPLB,XPHILB,NSB,NPLSB,NA2,IDIMB,IBASB,
     &            IPLSB,INMSB,IORSB,IND,IAROTA,KTROT,PDT)
*          --> XPTB(:,1)=x_n   XPTB(:,2,:)=\dot{q}_n
*
*     Calcul des forces de choc sur base B
*
      IF (IIMPI.EQ.333) WRITE(IOIMP,*)'DEVLFB: appel DEVLB1'
      CALL DEVLB1(FTOTB,XPTB,IPALB,IPLIB,JPLIB,XPALB,XVALB,NLIAB,
     &            NPLB,IDIMB,PDT,NPAS,IND,FEXPSM,NPC1,IERRD,
     &            FTEST2,XABSCI,XORDON,NIP,XCHPFB)
      IF (IERRD.NE.0) RETURN
*
*     Calcul des moments
*
* On va supprimer l'appel a devmom.
c      IF (RIGIDE) THEN
c           CALL DEVMOM(FTOTB,Q1,FEXB,XPHILB,IAROTA,IBASB,IPLSB,INMSB,
c     &                 NA2,NA1,NSB,NPLSB,NPLB,1,IDIM,KTROT)
c      ENDIF
****
*
*     Projection des forces base B sur base A
*
      IF (IIMPI.EQ.333) WRITE(IOIMP,*)'DEVLFB: appel DEVPRO'
* Matthieu: KTROT pour rotas rigides dans diff centrees (dyndif.eso)
      KTROT = 0
      CALL DEVPRO(XPHILB,FTOTB,FTOTBA,IBASB,INMSB,IPLSB,IORSB,NSB,
     &            NPLSB,NA2,IDIMB,NPLB,NA1,IAROTA,KTROT)
*
*     Ajout des forces projet�es aux forces ext�rieures sur base A
*
      DO 10 I = 1,NA1
         FTOTA(I,IND) = FTOTA(I,IND) + FTOTBA(I)
 10   CONTINUE
*
      END





 
 
 
 
