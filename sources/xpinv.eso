      SUBROUTINE xpinv(vect,mat,xang)
      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)
-INC CCREEL 
*-----------------------------------------------------------------------*
*     fonction chapeau : matrice tangente de l'exponentiel dans SO(3) :                                                                       *
*     dexp^{-1}
*-----------------------------------------------------------------------*
      REAL*8 vect(3),mat(3,3),uchap(3,3),uchap2(3,3),u2(3)
      logical linv

      linv = .false.

      mat(1,1) = 1.d0
      mat(1,2) = 0.d0
      mat(1,3) = 0.d0
      mat(2,1) = 0.d0
      mat(2,2) = 1.d0
      mat(2,3) = 0.d0
      mat(3,1) = 0.d0
      mat(3,2) = 0.d0
      mat(3,3) = 1.d0
*     calcul de l'angle :
      xang = 0.d0
      do id=1,3
        xang = xang + (vect(id)**2)
      enddo
      xang = dsqrt(xang)
*      if (xang.le.dsqrt(xzprec)) then 
*      if (xang.le.1.d-6) then 
      if (xang.le.1.d-10) then 
        write(*,*)'xpinv : angle trop petit' 
        goto 1
      endif
*       axe de rotation (unitaire) :
      do id=1,3
        u2(id) = vect(id)/xang
      enddo
      call chap(u2(1),uchap(1,1))

*     write(*,*)'xpinv : u2 '
*       write(*,'(3(1X,F8.5))') , (u2(id),id=1,3)

      do id = 1,3
        do j = 1,3
          uchap2(id,j) = 0.d0
          do k = 1,3
            uchap2(id,j) = uchap2(id,j) + uchap(id,k)*uchap(k,j)
          enddo
        enddo
      enddo
*       mat :
*     do id=1,3
*       do j=1,3
*         mat(id,j) = -(uchap(id,j)/2.d0)
*       enddo
*     enddo
*      write(*,*)'dxpinv : xang = ',xang 
*      write(*,*)'         dcotan(xang) : ',dcotan(xang) 
*      if (dabs(xang).ge.dsqrt(xzprec)) then
      if (linv) then
        do id=1,3
          do j=1,3
            mat(id,j) = -(uchap(id,j)/2.d0) - 
     &  ((xang*dcotan(xang/2.d0) - 2.d0)/(2.d0*(xang**2)))*uchap2(id,j)
*     &  (1.d0 - ((xang/2.d0)*dcotan(xang/2.d0))/(xang**2))*uchap2(id,j)
          enddo
          mat(id,id) = mat(id,id) + 1.d0
        enddo
*      endif
      endif
      if (.not.linv) then
        do id=1,3
        do j=1,3
        mat(id,j)=((2.d0*(dsin(xang/2.d0)**2)/(xang**2))*uchap(id,j)) +
     &            (((xang - dsin(xang))/(xang**3)) * uchap2(id,j))
        enddo
        mat(id,id) = mat(id,id) + 1.d0
        enddo
      endif

 1    continue
      
*     write(*,*)'xpinv : mat '
*     do id=1,3
*        write(*,'(3(1X,F8.5))') , (mat(id,j),j=1,3)
*     enddo

      END
