      SUBROUTINE cmthth(Q1,KTROT,NA1,NB1M,IB,ind,na3,ina1) 
     
      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)
******************************************************************
*         BRAS de levier : seulement si le centred rotation n'est pas confondu avec le centre de gravite
******************************************************************
*   consistent mass  : shabana p 321 : mthth = Ithth
*                    : shabana p 275 :
*   Ithth = int_V rho chap(X + u_f)^T * chap(X + u_f) dV 
*   lumped masses : shabana p 320 :
*   mthth = sum_j m_ij * B_ij^T*B_ij , i = mode , j = node, B = - A chap(X+u_f)
*   tous les modes ne sont pas pris en compte, on divise en :
*     - une partie statique : le tenseur d'inertie du solide calcule analytiquement. 
*     mthth_stat = J (INERTIE ds mtrot) 
*     - une partie corrective :  
*     mthth_corr = - sum_i sum_j m_ij * chap(phi_ij * qf_i)^T * chap(phi_ij * qf_i), i = mode , j = node 
*
*   Rq  : on ne calcule ici que la partie corrective
*   Rq  : on saute les translations rigides
******************************************************************

      SEGMENT,MTROT
         REAL*8 OMEG1(4,5,NSB),OMEG2(3,5,NSB),OMEG3(3,5,NSB)
         REAL*8 ROT(3,3,5,NSB),EXPTH(3,3,2,NSB),INERTIE(3,3,NSB)
         REAL*8 XCENT(3,NSB),XCOOLB(3,NSB,NPLB),DTHETA(3,NSB)
         REAL*8 FMOMTOT(3,5,NSB),INVINERT(3,3,NSB),MTSB(NSB)
         REAL*8 UFLEX(NPLB,NSB,3,2),VFLEX(NPLB,NSB,3,2)
         REAL*8 PICIN(NSB,3),TCIN(NSB),EDEF(NSB),XCG(3,NSB)
         REAL*8 XTPHI(3,NPDEF,NA2,NSB),XCOOPHI(3,NPDEF,NSB) 
         REAL*8 XMNO(NA2,NSB),QVTH(3,NSB),QVR(3,NSB),QVF(NA2,NSB)
         REAL*8 MRTH(3,3,NSB),MTHTH(3,3,NSB)
         REAL*8 MFTH(NA2,3,NSB),MFR(NA2,3,NSB),MTOT(NTOT,NTOT,NSB)
         REAL*8 SKL(3,3,NA2,NA2,NSB),IKL(3,3,NA2,NSB)
         REAL*8 XMPOI(NPDEF,NSB)
         INTEGER IBASR(NSB2)
         CHARACTER*4 ITCOMP(NSB2)
         LOGICAL ITRIG(NSB,NA2)
      ENDSEGMENT
*
      REAL*8 Q1(NA1,*)
      REAL*8 xcgcha(3,3),xtcha(3,3),xt(3),xtcha2(3,3)
      REAL*8 xco(3),xcocha(3,3)
      REAL*8 xcof(3,3),xfco(3,3),xcoco(3,3)
******************************************************************
      mtrot = ktrot
******************************************************************
      npdef = xtphi(/2)
******************************************************************
*     nbr de modes elastiques dans la sous bases :
******************************************************************
*     na3 = inmsb(ib)
*     1er mode elast ou transl rigi de la sous base ib ds l'ensemble des modes elast + trans rigis
*     ina1 = iorsb(ib) - 1
*******************************************************************
**     Partie corrective :
*******************************************************************
*      do ip=1,npdef
*******************************************************************
*        do 1 in = 1,na3
*          if (itrig(ib,in)) goto 1
*          i2 = ina1 + in
*          do id=1,3
*            Xt(id) = xtphi(id,ip,in,ib) * q1(i2,ind) 
*            xco(id) = xcoophi(id,ip,ib) - xcent(id,ib)
*          enddo
*          call chap(Xt(1),Xtcha(1,1)) 
*          call chap(xco(1),xcocha(1,1))
**         on calcule Xtcha2 : 
*          do id=1,3
*            do j=1,3
*              xtcha2(id,j) = 0.d0
*              xcof(id,j) = 0.d0
*              xfco(id,j) = 0.d0
*              xcoco(id,j) = 0.d0
*              do k=1,3
*                xtcha2(id,j) = Xtcha2(id,j) + (Xtcha(k,id)*Xtcha(k,j))
*                xcof(id,j) = Xcof(id,j) + (xcocha(k,id)*Xtcha(k,j))
*                xfco(id,j) = Xfco(id,j) + (xtcha(k,id)*Xcocha(k,j))
*                xcoco(id,j) = Xcoco(id,j) + (xcocha(k,id)*Xcocha(k,j))
*              enddo
*            enddo
*          enddo
**         mthth :
*          do id=1,3
*            do j=1,3
*              mthth(id,j,ib) = mthth(id,j,ib) +
*     &      ((Xtcha2(id,j)+xcof(id,j)+xfco(id,j)+xcoco(id,j))*
*     &        xmpoi(ip,in,ib))
*            enddo
*          enddo
* 1      continue
****** fin boucle sur les points 
*      enddo
* ikl 
*   termes diagonaux :
      do in=1,na3
        i2 = ina1 + in
        mthth(1,1,ib) = mthth(1,1,ib) + 
     &  (2.d0*q1(i2,1)*(ikl(2,2,in,ib) + ikl(3,3,in,ib)))
        mthth(2,2,ib) = mthth(2,2,ib) + 
     &  (2.d0*q1(i2,1)*(ikl(1,1,in,ib) + ikl(3,3,in,ib)))
        mthth(3,3,ib) = mthth(3,3,ib) + 
     &  (2.d0*q1(i2,1)*(ikl(1,1,in,ib) + ikl(2,2,in,ib)))
      enddo
*   termes non diagonaux :
      do k=1,3
      do l=1,3
        if (k.ne.l) then
          do in=1,na3
            i2 = ina1 + in
            mthth(k,l,ib) = mthth(k,l,ib) - 
     &                     q1(i2)*(ikl(k,l,in,ib)+ikl(l,k,in,ib)) 
          enddo
        endif
      enddo
      enddo
* skl : 
      do in=1,na3
        i2 = ina1 + in
        do j=1,na3
          j2 = ina1 + j
          mthth(1,1,ib) = mthth(1,1,ib) + 
     &    (q1(i2,1)*(skl(2,2,in,j,ib) + skl(3,3,in,j,ib))*q1(j2,1))
          mthth(2,2,ib) = mthth(2,2,ib) + 
     &    (q1(i2,1)*(skl(1,1,in,j,ib) + skl(3,3,in,j,ib))*q1(j2,1))
          mthth(3,3,ib) = mthth(3,3,ib) + 
     &    (q1(i2,1)*(skl(1,1,in,j,ib) + skl(2,2,in,j,ib))*q1(j2,1))
          mthth(1,2,ib) = mthth(1,2,ib) - 
     &    (q1(i2,1)*skl(2,1,in,j,ib)*q1(j2,1))
          mthth(1,3,ib) = mthth(1,3,ib) - 
     &    (q1(i2,1)*skl(3,1,in,j,ib)*q1(j2,1))
          mthth(2,3,ib) = mthth(2,3,ib) - 
     &    (q1(i2,1)*skl(3,2,in,j,ib)*q1(j2,1))
        enddo
      enddo
* on remplit les symetriques :
      mthth(2,1,ib) = mthth(1,2,ib)
      mthth(3,1,ib) = mthth(1,3,ib)
      mthth(3,2,ib) = mthth(2,3,ib)

      write(*,*)'MTHTH :'
      do id=1,3
         write(*,'(3(1X,F8.5))') , (mthth(id,j,ib),j=1,3)
      enddo
      write(*,*)'inertie :'
      do id=1,3
         write(*,'(3(1X,F8.5))') , (inertie(id,j,ib),j=1,3)
      enddo
*
      END