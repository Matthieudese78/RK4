C D2VTRI    SOURCE    BP208322  17/07/18    21:15:02     9498           
C DEVTRI    SOURCE    LAVARENN  96/10/30    21:22:46     2349
      SUBROUTINE D2VTRI(Q1,Q2,Q3,NA1,IINS2,FTOTA,XRES,ICHRES,NRES,
     &                  NCRES,NPRES,XVALA,INULA,NLIAA,NLSA,XRESLA,
     &                  XVALB,INULB,NLIAB,NLSB,XRESLB,ILIREA,ILIREB,
     &                  NTVAR,WEXT,WINT,XCHPFB,NPLB,KTROT,NCRIG,XRIG,
     &                  IAROTA)
      IMPLICIT INTEGER(I-N)
      IMPLICIT REAL*8(A-H,O-Z)
*--------------------------------------------------------------------*
*                                                                    *
*     Operateur DYNE : algorithme de Fu - de Vogelaere               *
*     ________________________________________________               *
*                                                                    *
*     Transfert des quantites initiales dans le tableau de           *
*     sauvegarde, si l'on souhaite les garder ...                    *
*                                                                    *
*     Param}tres:                                                    *
*                                                                    *
* e   Q1(.,.) Vecteur des deplacements generalises                   *
* e   Q2(.,.) Vecteur des vitesses generalises                       *
* e   Q3(.,.) Vecteur des accelerations generalises                  *
* e   NA1     Nombre total d'inconnues en base A                     *
* e   IINS2   Numero du pas de sortie                                *
* e   FTOTA   Forces exterieures totalisees en base A                *
* es  XRES    Valeurs des variables sauvegardees                     *
* e   ICHRES  Indique quelles variables seront sauvegardees          *
* e   NRES    Nombre de variables ( principales et auxilliaires )    *
* e   NCRES   Nombre de valeurs prises par les variables             *
* e   NPRES   Nombre de pas de sortie                                *
* e   XVALA   Tableau contenant les variables internes de liaison    *
* e   INULA   Tableau contenant les rep}res des liaisons             *
* e   NLIAA   Nombre de liaisons sur la base A                       *
* e   NLSA    Nombre de liaisons en sortie bas A                     *
* es  XRESLA  Valeurs de variables de liaisons sauvegardees base B   *
* e   XVALB   Tableau contenant les variables internes de liaison    *
* e   INULB   Tableau contenant les rep}res des liaisons             *
* e   NLIAB   Nombre de liaisons sur la base B                       *
* e   NLSB    Nombre de liaisons en sortie bas B                     *
* es  XRESLB  Valeurs de variables de liaisons sauvegardees base B   *
* e,s WEXT   travail des forces exterieures
* e,s WINT   travail des forces interieures (rigidite et
*            amortissement et forces de liaison )
*                                                                    *
*     Auteur, date de creation:                                      *
*                                                                    *
*     Lionel VIVAN, le 1 septembre 1989.                             *
*                                                                    *
*--------------------------------------------------------------------*
      SEGMENT,MTROT
         REAL*8 OMEG1(4,5,NSB),OMEG2(3,5,NSB),OMEG3(3,5,NSB)
         REAL*8 ROT(3,3,5,NSB),EXPTH(3,3,2,NSB),INERTIE(3,3,NSB)
         REAL*8 XCENT(3,NSB),XCOOLB(3,NSB,NPLB),DTHETA(3,NSB)
         REAL*8 FMOMTOT(3,5,NSB),INVINERT(3,3,NSB),MTSB(NSB)
         REAL*8 UFLEX(NPLB,NSB,3,2),VFLEX(NPLB,NSB,3,2)
         REAL*8 PICIN(NSB,3),TCIN(NSB),EPOT(NSB),XGC(3,NSB)
         REAL*8 MST(3,NA2,NSB)
         INTEGER IBASR(NSB2)
         CHARACTER*4 ITCOMP(NSB2)
         LOGICAL ITRIG(NSB,NA2)
      ENDSEGMENT
*      
      REAL*8 Q1(NA1,*),Q2(NA1,*),Q3(NA1,*)
      REAL*8 XVALA(NLIAA,4,*),XRESLA(NLSA,NPRES,*)
      REAL*8 XVALB(NLIAB,4,*),XRESLB(NLSB,NPRES,*)
      REAL*8 FTOTA(NA1,*),XRES(NRES,NCRES,*),XRIG(NRES,NCRIG,*)
      REAL*8 XCHPFB(2,NLIAB,4,*)
      INTEGER ICHRES(*),INULA(*),INULB(*),ILIREA(NLSA,*),ILIREB(NLSB,*)
      INTEGER IAROTA(*)
      LOGICAL RIGIDE
*
      RIGIDE = KTROT.NE.0
      IF (RIGIDE) THEN
        MTROT  = KTROT
        NSB = OMEG1(/3)
      ENDIF
*      
*     Sauvegarde des valeurs initiales
*
      IF (NRES.NE.0) THEN
         KRES = 0
         
c       +deplacement 
*         WRITE(*,*)'D2VTRI: sauv depl. ICHRES(1) =',ICHRES(1)
         IF (ICHRES(1).GE.1) THEN
            KRES = KRES + 1
            DO 10 I=1,NA1
               XRES(KRES,I,IINS2) = Q1(I,2)
*               WRITE(*,*)'        XRES(',KRES,I,IINS2,') = ',
*     &                            XRES(KRES,I,IINS2)
 10         CONTINUE
* Si rotas rigides: 
            IF (RIGIDE) THEN
              IBRIG = 0
              DO IB=1,NSB
                IF (IAROTA(IB).NE.0) THEN
                  IBRIG = IBRIG + 1
                  DO I=1,4
* old:             XRIG(KRES,I+4*(IB-1),IINS2) = OMEG1(I,2,IB) 
                   XRIG(KRES,I+4*(IBRIG-1),IINS2) = OMEG1(I,2,IB)
*                   WRITE(*,*)'        ID = ',I
*                   WRITE(*,*)'        IPDT = ',1
*                   WRITE(*,*)'        IB = ',IB
*                   WRITE(*,*)'        KRES = ',KRES
*                   WRITE(*,*)'        I+4*(IB-IBRIG-1) = ',
*     &                                I+4*(IB-IBRIG-1)
*                   WRITE(*,*)'        IINS2 = ',IINS2
                  ENDDO
                ENDIF
              ENDDO
            ENDIF
         ENDIF

         
c       +vitesse 
*         WRITE(*,*)'D2VTRI: sauv vite. ICHRES(2) =',ICHRES(2)
         IF (ICHRES(2).GE.1) THEN
            KRES = KRES + 1
            DO 12 I=1,NA1
               XRES(KRES,I,IINS2) = Q2(I,2)
 12         CONTINUE
* Si rotas rigides: 
            IF (RIGIDE) THEN
              IBRIG = 0
              DO IB=1,NSB
                IF (IAROTA(IB).NE.0) THEN
                  IBRIG = IBRIG + 1
                  DO I=1,3
* old:              XRIG(KRES,I+3*(IB-1),IINS2) = OMEG2(I,2,IB)
                    XRIG(KRES,I+4*(IBRIG-1),IINS2) = OMEG2(I,2,IB)
                  ENDDO
                  XRIG(KRES,4*(IBRIG),IINS2) = 0.D0
                ENDIF
              ENDDO
            ENDIF
         ENDIF

c       +acceleration 
*         WRITE(*,*)'D2VTRI: sauv acce. ICHRES(5) =',ICHRES(5)
         IF (ICHRES(5).GE.1) THEN
            KRES = KRES + 1
            DO 18 I=1,NA1
               XRES(KRES,I,IINS2) = Q3(I,2)
 18         CONTINUE
* Si rotas rigides: 
            IF (RIGIDE) THEN
              IBRIG = 0
              DO IB=1,NSB
                IF (IAROTA(IB).NE.0) THEN        
                  IBRIG = IBRIG + 1
                  DO I=1,3
* old:             XRIG(KRES,I+3*(IB-1),IINS2) = OMEG3(I,2,IB)
                   XRIG(KRES,I+4*(IBRIG-1),IINS2) = OMEG3(I,2,IB)
                 ENDDO
                 XRIG(KRES,I+4*(IBRIG),IINS2) = 0.D0
                ENDIF
              ENDDO
            ENDIF
         ENDIF

c       +travail exterieur
         IF (ICHRES(7).GE.1) THEN
            KRES = KRES + 1
            DO 60 I=1,NA1
               XRES(KRES,I,IINS2) = 0.d0
 60            CONTINUE
* Si rotas rigides: energie cinetique T_cin
            IF (RIGIDE) THEN
              IBRIG = 0
              DO IB=1,NSB
                IF (IAROTA(IB).NE.0) THEN      
                  IBRIG = IBRIG + 1
                  XRIG(KRES,1+4*(IBRIG-1),IINS2) = TCIN(IB)
                  XRIG(KRES,2+4*(IBRIG-1),IINS2) = epot(ib)
                  XRIG(KRES,3+4*(IBRIG-1),IINS2) = 0.D0
                  XRIG(KRES,4*IBRIG,IINS2) = 0.D0
                ENDIF
              ENDDO
            ENDIF 
 
         ENDIF
         
c       +travail interieur
         IF (ICHRES(8).GE.1) THEN
            KRES = KRES + 1
            DO 70 I=1,NA1
               XRES(KRES,I,IINS2) = 0.d0
 70         CONTINUE
* Si rotas rigides: moment cinetique PICIN
            IF (RIGIDE) THEN
              IBRIG = 0
              DO IB=1,NSB
                IF (IAROTA(IB).NE.0) THEN        
                  IBRIG = IBRIG + 1
                  DO I=1,3
                   XRIG(KRES,I+4*(IBRIG-1),IINS2)=PICIN(IB,I)
                  ENDDO
                  XRIG(KRES,4*(IBRIG),IINS2)=0.D0
                ENDIF
              ENDDO
            ENDIF
         ENDIF

      ENDIF
      
c    +liaisons_A
      IF (ICHRES(9).GE.1) THEN
         DO 30 IL = 1,NLSA
            IIL = INULA(IL)
            II = 0
            DO 32 IV = 1,NTVAR
               IF (ILIREA(IL,IV).EQ.1) THEN
                  II = II + 1
                  XRESLA(IL,IINS2,II) = XVALA(IIL,2,IV)
               ENDIF
 32         CONTINUE
 30      CONTINUE
      ENDIF
c    +liaisons_B
      IF (ICHRES(10).GE.1) THEN
         DO 40 IL = 1,NLSB
            IIL = INULB(IL)
            II = 0
            DO 42 IV = 1,NTVAR
               IF (ILIREB(IL,IV).EQ.1) THEN
                  II = II + 1
                  XRESLB(IL,IINS2,II) = XVALB(IIL,2,IV)
               ELSE
                  IF (ILIREB(IL,IV).EQ.2) THEN
                   DO 43 IP=1,NPLB
                    DO 44 ID=1,2
                      II = II + 1
                      XRESLB(IL,IINS2,II) = XCHPFB(ID,IIL,2,IP)
 44                 CONTINUE
 43                CONTINUE
                  ENDIF
*
               ENDIF
 42          CONTINUE
 40       CONTINUE
      ENDIF
*
      END




 
